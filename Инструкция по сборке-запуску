Сборка проекта:

1. Восстановить дамп базы данных PostgreSql из файла 'dataBase.backup' (находится в корне проекта '/dump/dataBase.backup')
2. В файле по пути '/src/main/resources/hibernate.cfg.xml':
   - в <property name="hibernate.connection.url"> указать url вашей базы данных с востановленым дампом
   - в <property name="connection.username"> указать имя пользователя для доступа к бд
   - в <property name="connection.password"> указать пароль бд (если необходимо)
3. В файле по пути '/src/main/resources/jdbcConnection.properties' указать теже значения, что и в файле 'hibernate.cfg.xml'
4. Открыть командную строку в корне проекта
5. Вызвать команду 'mvn package'


Запуск проекта:

1. ВАЖНО!
Входные JSON файлы находятся в директории '/JsonInputData/'.
Для корректной работы приложения необходимо скопировать, из появившейся после сборки директории 'target', файл 'program-jar-with-dependencies.jar' в корень проекта
(важно чтобы файл 'program-jar-with-dependencies.jar' и папки '/JsonInputData/' и '/JsonResult/' находились в одном месте).
Пример готового приложения находится в папке '/example/'.

2. Открыть из директории, где находятся 'program-jar-with-dependencies.jar', '/JsonInputData/' и '/JsonResult/' командную строку.

3. Вызвать команду с 3-мя аргументами, пример - 'java -jar program-jar-with-dependencies.jar search criterias1.json result.json', где:
    - первый аргумент 'search' - тип запроса. Всего приложение принимает 2 типа запросов: 'search' и 'stat'.
      'search' - поиск по критериям.
      'stat' - сбор статистики по диапазону дат.
    - второй аргумент 'criterias1.json' - имя файла из директории '/JsonInputData/'. 
      Файлы с префиксом 'criterias' соответствуют типу запроса 'search'.
      Файлы с префиксом 'stat' соответствуют типу запроса 'stat'.
      
      (Если вы будете использовать собственные JSON файлы для запроса, совсем не обязательно, чтобы файлы имели вышеперечисленные префиксы. 
        Главное, чтобы содержание файлов соответствовало первому аргументу (типу запроса).
        А так же, важно, чтобы файлы находились в директории '/JsonInputData/')
        
      Пример содержания JSON файла для типа запроса 'search':   {
                                                                  "criterias": [
                                                                    {"lastName": "Иванов"},
                                                                    {"productName": "Минеральная вода", "minTimes": 2},
                                                                    {"minExpenses": 100, "maxExpenses": 4000},
                                                                    {"badCustomers": 2}
                                                                  ]
                                                                }
          
      Пример содержания JSON файла для типа запроса 'stat': {
                                                              "startDate": "2020-09-14",
                                                              "endDate": "2020-09-26"
                                                            }
                                                            
    - третий аргумент 'result.json' - имя файла, куда будет записан ответ.
      Файл должен быть в формате .json
      После отработки программы файл появится в директории '/JsonResult/'
      
Все ошибки, если таковые возникнут в процессы работы программы, будут записаны в выходной файл.
Если по какой-то причине программа не сможет рабобрать имя файла для записи, в директории '/JsonResult/' программа создаст файл 'error.json' и запише ошибки в него.
